{
  "/Users/jasonbeedle/Desktop/Fat-Fish-Tech-Test/apps/backend/todo-api/serverless.yml": {
    "versionFramework": "4.9.1",
    "servicePath": "/Users/jasonbeedle/Desktop/Fat-Fish-Tech-Test/apps/backend/todo-api/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "fatfishdigitaltask",
      "app": "todoappfatfish",
      "service": "todo-api",
      "provider": {
        "name": "aws",
        "runtime": "nodejs16.x",
        "region": "eu-west-1",
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "CreateTodoLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/todo-api-dev-createTodo"
              }
            },
            "GetTodosLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/todo-api-dev-getTodos"
              }
            },
            "UpdateTodoLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/todo-api-dev-updateTodo"
              }
            },
            "DeleteTodoLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/todo-api-dev-deleteTodo"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "todo-api",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/todo-api-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/todo-api-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "todo-api",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "CreateTodoLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-west-1-0a3b8575-8e47",
                  "S3Key": "serverless/todo-api/dev/1742928932878-2025-03-25T18:55:32.878Z/todo-api.zip"
                },
                "Handler": "handler.createTodo",
                "Runtime": "nodejs16.x",
                "FunctionName": "todo-api-dev-createTodo",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "CreateTodoLogGroup"
              ]
            },
            "GetTodosLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-west-1-0a3b8575-8e47",
                  "S3Key": "serverless/todo-api/dev/1742928932878-2025-03-25T18:55:32.878Z/todo-api.zip"
                },
                "Handler": "handler.getTodos",
                "Runtime": "nodejs16.x",
                "FunctionName": "todo-api-dev-getTodos",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetTodosLogGroup"
              ]
            },
            "UpdateTodoLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-west-1-0a3b8575-8e47",
                  "S3Key": "serverless/todo-api/dev/1742928932878-2025-03-25T18:55:32.878Z/todo-api.zip"
                },
                "Handler": "handler.updateTodo",
                "Runtime": "nodejs16.x",
                "FunctionName": "todo-api-dev-updateTodo",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "UpdateTodoLogGroup"
              ]
            },
            "DeleteTodoLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-west-1-0a3b8575-8e47",
                  "S3Key": "serverless/todo-api/dev/1742928932878-2025-03-25T18:55:32.878Z/todo-api.zip"
                },
                "Handler": "handler.deleteTodo",
                "Runtime": "nodejs16.x",
                "FunctionName": "todo-api-dev-deleteTodo",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "DeleteTodoLogGroup"
              ]
            },
            "CreateTodoLambdaVersionkxKOL4v2P1a628IRRdNCBnjzcSxj66Vz5barmsHOZA": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateTodoLambdaFunction"
                },
                "CodeSha256": "4b9lZrkH3aVrECBcOzGkJ/fRv76Dhf0lXnKB/Z0GmP4="
              }
            },
            "GetTodosLambdaVersionTr4B4hqB8dLhOoVr9cjMfCBJeWeSlXKxI5UhTh8w": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetTodosLambdaFunction"
                },
                "CodeSha256": "4b9lZrkH3aVrECBcOzGkJ/fRv76Dhf0lXnKB/Z0GmP4="
              }
            },
            "UpdateTodoLambdaVersionYox1BCtF25Eis1IuYiDoKK2FLA870opag13acNLTw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UpdateTodoLambdaFunction"
                },
                "CodeSha256": "4b9lZrkH3aVrECBcOzGkJ/fRv76Dhf0lXnKB/Z0GmP4="
              }
            },
            "DeleteTodoLambdaVersionLdVqheTTIRystTeeCxANX77gDnfSxw4wfOW43wC0mw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "DeleteTodoLambdaFunction"
                },
                "CodeSha256": "4b9lZrkH3aVrECBcOzGkJ/fRv76Dhf0lXnKB/Z0GmP4="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-todo-api",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceTodos": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "todos",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceTodosIdVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceTodos"
                },
                "PathPart": "{id}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodTodosPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTodos"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CreateTodoLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "CreateTodoLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodTodosGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTodos"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetTodosLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetTodosLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodTodosIdVarPut": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PUT",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTodosIdVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "UpdateTodoLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "UpdateTodoLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodTodosIdVarDelete": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "DELETE",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTodosIdVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "DeleteTodoLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "DeleteTodoLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1742928928773": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodTodosPost",
                "ApiGatewayMethodTodosGet",
                "ApiGatewayMethodTodosIdVarPut",
                "ApiGatewayMethodTodosIdVarDelete"
              ]
            },
            "CreateTodoLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateTodoLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetTodosLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetTodosLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "UpdateTodoLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UpdateTodoLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "DeleteTodoLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "DeleteTodoLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-eu-west-1-0a3b8575-8e47",
              "Export": {
                "Name": "sls-todo-api-dev-ServerlessDeploymentBucketName"
              }
            },
            "CreateTodoLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateTodoLambdaVersionkxKOL4v2P1a628IRRdNCBnjzcSxj66Vz5barmsHOZA"
              },
              "Export": {
                "Name": "sls-todo-api-dev-CreateTodoLambdaFunctionQualifiedArn"
              }
            },
            "GetTodosLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetTodosLambdaVersionTr4B4hqB8dLhOoVr9cjMfCBJeWeSlXKxI5UhTh8w"
              },
              "Export": {
                "Name": "sls-todo-api-dev-GetTodosLambdaFunctionQualifiedArn"
              }
            },
            "UpdateTodoLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UpdateTodoLambdaVersionYox1BCtF25Eis1IuYiDoKK2FLA870opag13acNLTw"
              },
              "Export": {
                "Name": "sls-todo-api-dev-UpdateTodoLambdaFunctionQualifiedArn"
              }
            },
            "DeleteTodoLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "DeleteTodoLambdaVersionLdVqheTTIRystTeeCxANX77gDnfSxw4wfOW43wC0mw"
              },
              "Export": {
                "Name": "sls-todo-api-dev-DeleteTodoLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-todo-api-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "createTodo": {
          "handler": "handler.createTodo",
          "events": [
            {
              "http": {
                "path": "todos",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "todo-api-dev-createTodo",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs16.x",
          "vpc": {},
          "versionLogicalId": "CreateTodoLambdaVersionkxKOL4v2P1a628IRRdNCBnjzcSxj66Vz5barmsHOZA"
        },
        "getTodos": {
          "handler": "handler.getTodos",
          "events": [
            {
              "http": {
                "path": "todos",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "todo-api-dev-getTodos",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs16.x",
          "vpc": {},
          "versionLogicalId": "GetTodosLambdaVersionTr4B4hqB8dLhOoVr9cjMfCBJeWeSlXKxI5UhTh8w"
        },
        "updateTodo": {
          "handler": "handler.updateTodo",
          "events": [
            {
              "http": {
                "path": "todos/{id}",
                "method": "put",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "todo-api-dev-updateTodo",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs16.x",
          "vpc": {},
          "versionLogicalId": "UpdateTodoLambdaVersionYox1BCtF25Eis1IuYiDoKK2FLA870opag13acNLTw"
        },
        "deleteTodo": {
          "handler": "handler.deleteTodo",
          "events": [
            {
              "http": {
                "path": "todos/{id}",
                "method": "delete",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "todo-api-dev-deleteTodo",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs16.x",
          "vpc": {},
          "versionLogicalId": "DeleteTodoLambdaVersionLdVqheTTIRystTeeCxANX77gDnfSxw4wfOW43wC0mw"
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs16.x",
      "region": "eu-west-1",
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "CreateTodoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/todo-api-dev-createTodo"
            }
          },
          "GetTodosLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/todo-api-dev-getTodos"
            }
          },
          "UpdateTodoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/todo-api-dev-updateTodo"
            }
          },
          "DeleteTodoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/todo-api-dev-deleteTodo"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "todo-api",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/todo-api-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/todo-api-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "todo-api",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CreateTodoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-west-1-0a3b8575-8e47",
                "S3Key": "serverless/todo-api/dev/1742928932878-2025-03-25T18:55:32.878Z/todo-api.zip"
              },
              "Handler": "handler.createTodo",
              "Runtime": "nodejs16.x",
              "FunctionName": "todo-api-dev-createTodo",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateTodoLogGroup"
            ]
          },
          "GetTodosLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-west-1-0a3b8575-8e47",
                "S3Key": "serverless/todo-api/dev/1742928932878-2025-03-25T18:55:32.878Z/todo-api.zip"
              },
              "Handler": "handler.getTodos",
              "Runtime": "nodejs16.x",
              "FunctionName": "todo-api-dev-getTodos",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetTodosLogGroup"
            ]
          },
          "UpdateTodoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-west-1-0a3b8575-8e47",
                "S3Key": "serverless/todo-api/dev/1742928932878-2025-03-25T18:55:32.878Z/todo-api.zip"
              },
              "Handler": "handler.updateTodo",
              "Runtime": "nodejs16.x",
              "FunctionName": "todo-api-dev-updateTodo",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UpdateTodoLogGroup"
            ]
          },
          "DeleteTodoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-west-1-0a3b8575-8e47",
                "S3Key": "serverless/todo-api/dev/1742928932878-2025-03-25T18:55:32.878Z/todo-api.zip"
              },
              "Handler": "handler.deleteTodo",
              "Runtime": "nodejs16.x",
              "FunctionName": "todo-api-dev-deleteTodo",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteTodoLogGroup"
            ]
          },
          "CreateTodoLambdaVersionkxKOL4v2P1a628IRRdNCBnjzcSxj66Vz5barmsHOZA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateTodoLambdaFunction"
              },
              "CodeSha256": "4b9lZrkH3aVrECBcOzGkJ/fRv76Dhf0lXnKB/Z0GmP4="
            }
          },
          "GetTodosLambdaVersionTr4B4hqB8dLhOoVr9cjMfCBJeWeSlXKxI5UhTh8w": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetTodosLambdaFunction"
              },
              "CodeSha256": "4b9lZrkH3aVrECBcOzGkJ/fRv76Dhf0lXnKB/Z0GmP4="
            }
          },
          "UpdateTodoLambdaVersionYox1BCtF25Eis1IuYiDoKK2FLA870opag13acNLTw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateTodoLambdaFunction"
              },
              "CodeSha256": "4b9lZrkH3aVrECBcOzGkJ/fRv76Dhf0lXnKB/Z0GmP4="
            }
          },
          "DeleteTodoLambdaVersionLdVqheTTIRystTeeCxANX77gDnfSxw4wfOW43wC0mw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteTodoLambdaFunction"
              },
              "CodeSha256": "4b9lZrkH3aVrECBcOzGkJ/fRv76Dhf0lXnKB/Z0GmP4="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-todo-api",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceTodos": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "todos",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceTodosIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceTodos"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodTodosPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceTodos"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateTodoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateTodoLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodTodosGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceTodos"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetTodosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetTodosLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodTodosIdVarPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceTodosIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UpdateTodoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UpdateTodoLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodTodosIdVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceTodosIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteTodoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeleteTodoLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1742928928773": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodTodosPost",
              "ApiGatewayMethodTodosGet",
              "ApiGatewayMethodTodosIdVarPut",
              "ApiGatewayMethodTodosIdVarDelete"
            ]
          },
          "CreateTodoLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateTodoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetTodosLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetTodosLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UpdateTodoLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateTodoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteTodoLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteTodoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-eu-west-1-0a3b8575-8e47",
            "Export": {
              "Name": "sls-todo-api-dev-ServerlessDeploymentBucketName"
            }
          },
          "CreateTodoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateTodoLambdaVersionkxKOL4v2P1a628IRRdNCBnjzcSxj66Vz5barmsHOZA"
            },
            "Export": {
              "Name": "sls-todo-api-dev-CreateTodoLambdaFunctionQualifiedArn"
            }
          },
          "GetTodosLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetTodosLambdaVersionTr4B4hqB8dLhOoVr9cjMfCBJeWeSlXKxI5UhTh8w"
            },
            "Export": {
              "Name": "sls-todo-api-dev-GetTodosLambdaFunctionQualifiedArn"
            }
          },
          "UpdateTodoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateTodoLambdaVersionYox1BCtF25Eis1IuYiDoKK2FLA870opag13acNLTw"
            },
            "Export": {
              "Name": "sls-todo-api-dev-UpdateTodoLambdaFunctionQualifiedArn"
            }
          },
          "DeleteTodoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteTodoLambdaVersionLdVqheTTIRystTeeCxANX77gDnfSxw4wfOW43wC0mw"
            },
            "Export": {
              "Name": "sls-todo-api-dev-DeleteTodoLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-todo-api-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": false,
        "monitoring": false
      },
      "orgObservabilityIntegrations": null,
      "serviceAppId": "5kWKpNQGMcX4m172PG",
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\norg: fatfishdigitaltask\n# \"app\" enables Serverless Framework Dashboard features and sharing them with other Services.\napp: todoappfatfish\nservice: todo-api\n\nprovider:\n  name: aws\n  runtime: nodejs16.x\n  region: eu-west-1 \n  stage: dev\n\nfunctions:\n  createTodo:\n    handler: handler.createTodo\n    events:\n      - http:\n          path: todos\n          method: post\n\n  getTodos:\n    handler: handler.getTodos\n    events:\n      - http:\n          path: todos\n          method: get\n\n  updateTodo:\n    handler: handler.updateTodo\n    events:\n      - http:\n          path: todos/{id}\n          method: put\n\n  deleteTodo:\n    handler: handler.deleteTodo\n    events:\n      - http:\n          path: todos/{id}\n          method: delete\n\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "2acc7e26-5ae6-4527-bbfc-ba8c8a57eba2",
    "orgName": "fatfishdigitaltask",
    "userId": "j9pHJqgnFfZN07MXH9",
    "userName": "fatfishdigitaltask",
    "serviceProviderAwsAccountId": "372075447360",
    "serviceProviderAwsCfStackName": "todo-api-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:eu-west-1:372075447360:stack/todo-api-dev/d33a4620-09a9-11f0-9058-065099c2b707",
    "serviceProviderAwsCfStackCreated": "2025-03-25T18:49:04.972Z",
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": "CREATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "GetTodosLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:372075447360:function:todo-api-dev-getTodos:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-todo-api-dev-GetTodosLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CreateTodoLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-west-1:372075447360:function:todo-api-dev-createTodo:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-todo-api-dev-CreateTodoLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://iwo2itix12.execute-api.eu-west-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-todo-api-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-eu-west-1-0a3b8575-8e47",
        "ExportName": "sls-todo-api-dev-ServerlessDeploymentBucketName"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "CreateTodoLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/todo-api-dev-createTodo"
          }
        },
        "GetTodosLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/todo-api-dev-getTodos"
          }
        },
        "UpdateTodoLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/todo-api-dev-updateTodo"
          }
        },
        "DeleteTodoLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/todo-api-dev-deleteTodo"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "todo-api",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/todo-api-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/todo-api-dev*:*:*"
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "todo-api",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "CreateTodoLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-west-1-0a3b8575-8e47",
              "S3Key": "serverless/todo-api/dev/1742928932878-2025-03-25T18:55:32.878Z/todo-api.zip"
            },
            "Handler": "handler.createTodo",
            "Runtime": "nodejs16.x",
            "FunctionName": "todo-api-dev-createTodo",
            "MemorySize": 1024,
            "Timeout": 6,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "CreateTodoLogGroup"
          ]
        },
        "GetTodosLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-west-1-0a3b8575-8e47",
              "S3Key": "serverless/todo-api/dev/1742928932878-2025-03-25T18:55:32.878Z/todo-api.zip"
            },
            "Handler": "handler.getTodos",
            "Runtime": "nodejs16.x",
            "FunctionName": "todo-api-dev-getTodos",
            "MemorySize": 1024,
            "Timeout": 6,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "GetTodosLogGroup"
          ]
        },
        "UpdateTodoLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-west-1-0a3b8575-8e47",
              "S3Key": "serverless/todo-api/dev/1742928932878-2025-03-25T18:55:32.878Z/todo-api.zip"
            },
            "Handler": "handler.updateTodo",
            "Runtime": "nodejs16.x",
            "FunctionName": "todo-api-dev-updateTodo",
            "MemorySize": 1024,
            "Timeout": 6,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "UpdateTodoLogGroup"
          ]
        },
        "DeleteTodoLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-eu-west-1-0a3b8575-8e47",
              "S3Key": "serverless/todo-api/dev/1742928932878-2025-03-25T18:55:32.878Z/todo-api.zip"
            },
            "Handler": "handler.deleteTodo",
            "Runtime": "nodejs16.x",
            "FunctionName": "todo-api-dev-deleteTodo",
            "MemorySize": 1024,
            "Timeout": 6,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "DeleteTodoLogGroup"
          ]
        },
        "CreateTodoLambdaVersionkxKOL4v2P1a628IRRdNCBnjzcSxj66Vz5barmsHOZA": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "CreateTodoLambdaFunction"
            },
            "CodeSha256": "4b9lZrkH3aVrECBcOzGkJ/fRv76Dhf0lXnKB/Z0GmP4="
          }
        },
        "GetTodosLambdaVersionTr4B4hqB8dLhOoVr9cjMfCBJeWeSlXKxI5UhTh8w": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "GetTodosLambdaFunction"
            },
            "CodeSha256": "4b9lZrkH3aVrECBcOzGkJ/fRv76Dhf0lXnKB/Z0GmP4="
          }
        },
        "UpdateTodoLambdaVersionYox1BCtF25Eis1IuYiDoKK2FLA870opag13acNLTw": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "UpdateTodoLambdaFunction"
            },
            "CodeSha256": "4b9lZrkH3aVrECBcOzGkJ/fRv76Dhf0lXnKB/Z0GmP4="
          }
        },
        "DeleteTodoLambdaVersionLdVqheTTIRystTeeCxANX77gDnfSxw4wfOW43wC0mw": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "DeleteTodoLambdaFunction"
            },
            "CodeSha256": "4b9lZrkH3aVrECBcOzGkJ/fRv76Dhf0lXnKB/Z0GmP4="
          }
        },
        "ApiGatewayRestApi": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "dev-todo-api",
            "EndpointConfiguration": {
              "Types": [
                "EDGE"
              ]
            },
            "Policy": ""
          }
        },
        "ApiGatewayResourceTodos": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "todos",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceTodosIdVar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceTodos"
            },
            "PathPart": "{id}",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodTodosPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceTodos"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "CreateTodoLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "CreateTodoLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodTodosGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceTodos"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "GetTodosLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "GetTodosLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodTodosIdVarPut": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "PUT",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceTodosIdVar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "UpdateTodoLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "UpdateTodoLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodTodosIdVarDelete": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "DELETE",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceTodosIdVar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "DeleteTodoLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "DeleteTodoLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayDeployment1742928928773": {
          "Type": "AWS::ApiGateway::Deployment",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "dev"
          },
          "DependsOn": [
            "ApiGatewayMethodTodosPost",
            "ApiGatewayMethodTodosGet",
            "ApiGatewayMethodTodosIdVarPut",
            "ApiGatewayMethodTodosIdVarDelete"
          ]
        },
        "CreateTodoLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "CreateTodoLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "GetTodosLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "GetTodosLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "UpdateTodoLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "UpdateTodoLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "DeleteTodoLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "DeleteTodoLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-eu-west-1-0a3b8575-8e47",
          "Export": {
            "Name": "sls-todo-api-dev-ServerlessDeploymentBucketName"
          }
        },
        "CreateTodoLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "CreateTodoLambdaVersionkxKOL4v2P1a628IRRdNCBnjzcSxj66Vz5barmsHOZA"
          },
          "Export": {
            "Name": "sls-todo-api-dev-CreateTodoLambdaFunctionQualifiedArn"
          }
        },
        "GetTodosLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "GetTodosLambdaVersionTr4B4hqB8dLhOoVr9cjMfCBJeWeSlXKxI5UhTh8w"
          },
          "Export": {
            "Name": "sls-todo-api-dev-GetTodosLambdaFunctionQualifiedArn"
          }
        },
        "UpdateTodoLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "UpdateTodoLambdaVersionYox1BCtF25Eis1IuYiDoKK2FLA870opag13acNLTw"
          },
          "Export": {
            "Name": "sls-todo-api-dev-UpdateTodoLambdaFunctionQualifiedArn"
          }
        },
        "DeleteTodoLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "DeleteTodoLambdaVersionLdVqheTTIRystTeeCxANX77gDnfSxw4wfOW43wC0mw"
          },
          "Export": {
            "Name": "sls-todo-api-dev-DeleteTodoLambdaFunctionQualifiedArn"
          }
        },
        "ServiceEndpoint": {
          "Description": "URL of the service endpoint",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "ApiGatewayRestApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                },
                "/dev"
              ]
            ]
          },
          "Export": {
            "Name": "sls-todo-api-dev-ServiceEndpoint"
          }
        }
      }
    }
  }
}